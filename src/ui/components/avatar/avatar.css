@import '/src/common/modern-reset.css';
@import '/src/common/a11y.css';

/* 아바타 컴포넌트 */
/* 인터렉션이 없는 이미지 컴포넌트 */
.img-avatar {
  --size: 4rem;
  --radius: 50%; /* 반복이 2번 이상 일어나면 변수 만드는 게 좋음 */
  --state: #dbdbdb;
  --state-border: #fff;
  --state-active: #4cfe88;

  width: var(--size);
  position: relative;

  img {
    width: 100%;
    aspect-ratio: 1/1; /* 정사각형이 유지된다고 생각했을 때만 쓸 수 있음. */
    border-radius: var(--radius); /* 64px의 절반인 32px로 작성해도 됨 */
  }

  .state {
    width: 25%;
    aspect-ratio: 1/1;
    border-radius: var(--radius);
    position: absolute;
    right: 0;
    bottom: 0;
    border: 2px solid var(--state-border);
    background: var(--state);

    &.is-active {
      background: var(--state-active);
    }
  }
}

/* 인터렉션이 있는 버튼 컴포넌트 */
.button-avatar {
  --size: 4rem;
  --radius: 50%;
  --state: #dbdbdb;
  --state-border: #fff;
  --state-active: #4cfe88;

  position: relative;
  background: none;
  border: 0;
  padding: 0;
  width: var(--size);

  img {
    width: 100%;
    aspect-ratio: 1/1;
    border-radius: var(--radius);
  }

  &::after {
    content: ''; /* (attr(aria-label))attribute이고 content는 가상 요소 클래스에 꼭 따라 와야 함. 이때 content:"문자열";가능 */
    position: absolute; /* BFC */
    width: 25%;
    aspect-ratio: 1/1;
    border-radius: var(--radius);
    right: 0;
    bottom: 0;
    border: 2px solid var(--state-border);
    background: var(--state);
  }
  &.is-active::after {
    background: var(--state-active);
  }
}
